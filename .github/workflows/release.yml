# read:
# - https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
# - https://trstringer.com/github-actions-create-release-upload-artifacts/
# - https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs

name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    # Map a step output to a job output
    outputs:
      output1: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ github.token }}

  build-linux-gnu:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features

      - name: Zip
        run: zip -jr linux.zip ./target/release/ftp-upload

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.output1 }}
          asset_path: ./linux.zip
          asset_name: linux-gnu.zip
          asset_content_type: application/zip

  build-linux-musl:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - run: |
          sudo apt update -y 
          sudo apt install -y zip build-essential musl-tools pkg-config libssl-dev

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features --target x86_64-unknown-linux-musl

      - name: Zip
        run: zip -jr linux.zip ./target/x86_64-unknown-linux-musl/release/ftp-upload

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.output1 }}
          asset_path: ./linux.zip
          asset_name: linux-musl.zip
          asset_content_type: application/zip

  build-windows:
    runs-on: windows-latest
    needs: create-release

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features

      - name: Zip
        run: Get-ChildItem -Path .\target\release\ftp-upload.exe | Compress-Archive -DestinationPath .\windows.zip -Force

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.output1 }}
          asset_path: ./windows.zip
          asset_name: windows.zip
          asset_content_type: application/zip

  build-macos:
    runs-on: macos-latest
    needs: create-release

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features

      - name: Zip
        run: zip -jr macos.zip ./target/release/ftp-upload

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.output1 }}
          asset_path: ./macos.zip
          asset_name: macos.zip
          asset_content_type: application/zip
